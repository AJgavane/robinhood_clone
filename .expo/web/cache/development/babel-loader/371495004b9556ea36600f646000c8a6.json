{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\01_Personal Projects\\\\MyApps\\\\StockSim\\\\robinhood_clone\\\\src\\\\components\\\\Stats.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport axios from \"axios\";\nimport StatsRow from \"./StatsRow\";\nimport { db } from \"./firebase\";\nimport \"../styles/Stats.css\";\nvar BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\nvar TOKEN = \"c0bg22n48v6to0rovs60\";\n\nfunction Stats() {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stockData = _useState2[0],\n      setStockData = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      myStocks = _useState4[0],\n      setMyStocksData = _useState4[1];\n\n  var getMyStocks = function getMyStocks() {\n    db.collection('myStocks').onSnapshot(function (snapshot) {\n      var promises = [];\n      var tempData = [];\n      snapshot.docs.map(function (doc) {\n        promises.push(getStockData(doc.data().ticker)).then(function (res) {\n          tempData.push({\n            id: doc.id,\n            data: doc.data(),\n            info: res.data\n          });\n        });\n      });\n      Promise.all(promises).then(function () {\n        console.log(tempData);\n      });\n    });\n  };\n\n  var getStockData = function getStockData(stock) {\n    return axios.get(\"\" + BASE_URL + stock + \"&token=\" + TOKEN).catch(function (error) {\n      console.error(\"Error\", error.message);\n    });\n  };\n\n  useEffect(function () {\n    var tempStockData = [];\n    var stockList = [\"TSLA\", \"TTM\", \"ARKW\", \"NVDA\", \"DAL\", \"ARKQ\"];\n    var promises = [];\n    getMyStocks();\n    stockList.map(function (stock) {\n      promises.push(getStockData(stock).then(function (res) {\n        tempStockData.push(_objectSpread({\n          name: stock\n        }, res.data));\n      }));\n    });\n    Promise.all(promises).then(function () {\n      setStockData(tempStockData);\n    });\n  }, []);\n  return React.createElement(\"div\", {\n    className: \"stats\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    className: \"stats__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, React.createElement(\"div\", {\n    className: \"stats__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }, \"Stocks\")), React.createElement(\"div\", {\n    className: \"stats__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    className: \"stats__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  })), React.createElement(\"div\", {\n    className: \"stats__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, \"Watchlist\")), React.createElement(\"div\", {\n    className: \"stats__content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, React.createElement(\"div\", {\n    className: \"stats__row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, stockData.map(function (stock) {\n    return React.createElement(StatsRow, {\n      key: stock.name,\n      name: stock.name,\n      openPrice: stock.o,\n      price: stock.c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 29\n      }\n    });\n  })))));\n}\n\nexport default Stats;","map":{"version":3,"sources":["D:/01_Personal Projects/MyApps/StockSim/robinhood_clone/src/components/Stats.js"],"names":["React","useState","useEffect","axios","StatsRow","db","BASE_URL","TOKEN","Stats","stockData","setStockData","myStocks","setMyStocksData","getMyStocks","collection","onSnapshot","snapshot","promises","tempData","docs","map","doc","push","getStockData","data","ticker","then","res","id","info","Promise","all","console","log","stock","get","catch","error","message","tempStockData","stockList","name","o","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport StatsRow from './StatsRow';\r\nimport { db } from './firebase';\r\n\r\nimport '../styles/Stats.css'\r\n\r\nconst BASE_URL = \"https://finnhub.io/api/v1/quote?symbol=\";\r\nconst TOKEN = \"c0bg22n48v6to0rovs60\";\r\n\r\nfunction Stats() {\r\n    const [stockData, setStockData] = useState([]);\r\n    const [myStocks, setMyStocksData] = useState([]);\r\n\r\n    const getMyStocks = () => {\r\n        db\r\n        .collection('myStocks')\r\n        .onSnapshot(snapshot => {\r\n            let promises = [];\r\n            let tempData = [];\r\n            snapshot.docs.map((doc)=>{\r\n                // console.log(doc.data());    // Prints ticker and #shares\r\n                promises.push(getStockData(doc.data().ticker))\r\n                .then((res)=>{\r\n                    tempData.push({\r\n                        id: doc.id,\r\n                        data: doc.data(),\r\n                        info: res.data\r\n                    })\r\n                })\r\n            });\r\n            Promise.all(promises).then(()=>{\r\n                console.log(tempData);\r\n            })\r\n        })\r\n    };\r\n\r\n    const getStockData = (stock) => {\r\n        return axios\r\n            .get(`${BASE_URL}${stock}&token=${TOKEN}`)\r\n            .catch((error) =>{\r\n                console.error(\"Error\", error.message);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        let tempStockData = [];\r\n        const stockList = [\"TSLA\", \"TTM\", \"ARKW\", \"NVDA\", \"DAL\", \"ARKQ\"];\r\n        let promises = [];\r\n        getMyStocks();\r\n        stockList.map((stock)=> {\r\n            promises.push(\r\n                getStockData(stock)\r\n                .then((res)=> {\r\n                    //console.log(res);       // to check if we get what we want\r\n                    tempStockData.push({name:stock, ...res.data});\r\n                })\r\n            )\r\n        });\r\n        Promise.all(promises).then(()=>{\r\n            // console.log(tempStockData);     // to check if we get what we want\r\n            setStockData(tempStockData);\r\n        })\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"stats\">\r\n            <div className=\"stats__container\">\r\n                <div className=\"stats__header\">\r\n                    <p>Stocks</p>\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__row\">\r\n                        \r\n                        {/* loop through and show the list of stocks in the portfolio */}\r\n                    </div>\r\n                </div>\r\n                <div className=\"stats__header\">\r\n                    <p>Watchlist</p>\r\n                </div>\r\n                <div className=\"stats__content\">\r\n                    <div className=\"stats__row\">\r\n                        {stockData.map((stock)=>(\r\n                            <StatsRow \r\n                                key={stock.name}\r\n                                name={stock.name}\r\n                                openPrice={stock.o}\r\n                                price={stock.c}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Stats\r\n"]},"metadata":{},"sourceType":"module"}