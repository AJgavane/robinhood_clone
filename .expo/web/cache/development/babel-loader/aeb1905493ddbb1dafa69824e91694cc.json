{"ast":null,"code":"var _jsxFileName = \"D:\\\\01_Personal Projects\\\\MyApps\\\\StockSim\\\\robinhood_clone\\\\src\\\\components\\\\StatsRow.js\";\nimport React from 'react';\nimport StockSVG from \"../../assets/stock.svg\";\nimport \"../styles/StatsRow.css\";\nimport { db } from \"./firebase\";\n\nfunction StatsRow(props) {\n  var buyStock = function buyStock() {\n    db.collection('myStocks').where(\"ticker\", \"==\", props.name).then(function (querySnapShot) {\n      if (!querySnapShot.empty) {\n        console.log(\"available\");\n        querySnapShot.forEach(function (doc) {\n          console.log(doc.id, \" => \", doc.data());\n        });\n      } else {\n        console.log(\"Not available\");\n      }\n    });\n  };\n\n  var percentChange = (props.price - props.openPrice) / props.openPrice * 100;\n  return React.createElement(\"div\", {\n    className: \"row\",\n    onClick: buyStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    className: \"row__intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, props.name), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }\n  }, props.shares && props.shares + \"shares\")), React.createElement(\"div\", {\n    className: \"row__chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, React.createElement(\"img\", {\n    src: StockSVG,\n    height: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })), React.createElement(\"div\", {\n    className: \"row__numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, React.createElement(\"p\", {\n    className: \"row__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 8\n    }\n  }, props.price), React.createElement(\"p\", {\n    className: \"row__percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 8\n    }\n  }, Number(percentChange).toFixed(2))));\n}\n\nexport default StatsRow;","map":{"version":3,"sources":["D:/01_Personal Projects/MyApps/StockSim/robinhood_clone/src/components/StatsRow.js"],"names":["React","StockSVG","db","StatsRow","props","buyStock","collection","where","name","then","querySnapShot","empty","console","log","forEach","doc","id","data","percentChange","price","openPrice","shares","Number","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP;AACA;AAEA,SAASC,EAAT;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnBH,IAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACCC,KADD,CACO,QADP,EACiB,IADjB,EACuBH,KAAK,CAACI,IAD7B,EAECC,IAFD,CAEM,UAACC,aAAD,EAAmB;AACrB,UAAG,CAACA,aAAa,CAACC,KAAlB,EAAyB;AAErBC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAH,QAAAA,aAAa,CAACI,OAAd,CAAsB,UAASC,GAAT,EAAc;AAChCH,UAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,EAAhB,EAAoB,MAApB,EAA4BD,GAAG,CAACE,IAAJ,EAA5B;AACH,SAFD;AAGH,OAND,MAMO;AAEHL,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACH;AACJ,KAbD;AAcH,GAfD;;AAiBA,MAAMK,aAAa,GAAK,CAACd,KAAK,CAACe,KAAN,GAAcf,KAAK,CAACgB,SAArB,IAAgChB,KAAK,CAACgB,SAAxC,GAAmD,GAAzE;AACA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAEf,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACI,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACiB,MAAN,IAAiBjB,KAAK,CAACiB,MAAN,GAAe,QAApC,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEpB,QAAV;AAAoB,IAAA,MAAM,EAAE,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,EAQF;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BG,KAAK,CAACe,KAAjC,CADD,EAEC;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCG,MAAM,CAACJ,aAAD,CAAN,CAAsBK,OAAtB,CAA8B,CAA9B,CAAhC,CAFD,CARE,CADJ;AAeH;;AAED,eAAepB,QAAf","sourcesContent":["import React from 'react'\r\n\r\nimport StockSVG from '../../assets/stock.svg'\r\nimport \"../styles/StatsRow.css\"\r\n\r\nimport { db } from './firebase'\r\n\r\nfunction StatsRow(props) {\r\n\r\n    const buyStock = () => {\r\n        db.collection('myStocks')\r\n        .where(\"ticker\", \"==\", props.name)\r\n        .then((querySnapShot) => {\r\n            if(!querySnapShot.empty) {\r\n                // update the record\r\n                console.log(\"available\");\r\n                querySnapShot.forEach(function(doc) {\r\n                    console.log(doc.id, \" => \", doc.data());\r\n                });\r\n            } else {\r\n                // add a new record\r\n                console.log(\"Not available\")\r\n            }\r\n        })\r\n    }\r\n\r\n    const percentChange = ( (props.price - props.openPrice)/props.openPrice)*100;\r\n    return (\r\n        <div className=\"row\" onClick={buyStock}>\r\n            <div className=\"row__intro\">\r\n                <h1>{props.name}</h1>\r\n                <p>{props.shares && (props.shares + \"shares\")}</p>\r\n            </div>\r\n            <div className=\"row__chart\">\r\n                <img src={StockSVG} height={16} />\r\n            </div>\r\n\t  \t\t\t<div className=\"row__numbers\">\r\n\t  \t\t\t\t<p className=\"row__price\">{props.price}</p>\r\n\t  \t\t\t\t<p className=\"row__percentage\">{Number(percentChange).toFixed(2)}</p>\r\n\t  \t\t\t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsRow\r\n"]},"metadata":{},"sourceType":"module"}