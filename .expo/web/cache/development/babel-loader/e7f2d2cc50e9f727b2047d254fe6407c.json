{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"D:\\\\01_Personal Projects\\\\MyApps\\\\StockSim\\\\robinhood_clone\\\\src\\\\components\\\\LineGraph.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2';\n\nfunction LineGraph() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      graphData = _useState2[0],\n      setGraphData = _useState2[1];\n\n  var data = [{\n    x: 10,\n    y: 20\n  }, {\n    x: 15,\n    y: 10\n  }, {\n    x: 18,\n    y: 4\n  }];\n  return React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default LineGraph;","map":{"version":3,"sources":["D:/01_Personal Projects/MyApps/StockSim/robinhood_clone/src/components/LineGraph.js"],"names":["React","useEffect","useState","Line","LineGraph","graphData","setGraphData","data","x","y"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,SAASC,SAAT,GAAqB;AAAA,kBAEiBF,QAAQ,CAAC,EAAD,CAFzB;AAAA;AAAA,MAEVG,SAFU;AAAA,MAECC,YAFD;;AAGjB,MAAMC,IAAI,GAAG,CAAC;AACVC,IAAAA,CAAC,EAAE,EADO;AAEVC,IAAAA,CAAC,EAAE;AAFO,GAAD,EAGV;AACCD,IAAAA,CAAC,EAAC,EADH;AAECC,IAAAA,CAAC,EAAE;AAFJ,GAHU,EAMV;AACCD,IAAAA,CAAC,EAAC,EADH;AAECC,IAAAA,CAAC,EAAE;AAFJ,GANU,CAAb;AAUA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH;;AAED,eAAeL,SAAf","sourcesContent":["import React, { useEffect, useState} from 'react'\r\nimport {Line} from 'react-chartjs-2'\r\n\r\nfunction LineGraph() {\r\n    // Let's make some fake data\r\n    const [graphData, setGraphData] = useState([]);\r\n    const data = [{\r\n        x: 10,\r\n        y: 20\r\n    }, {\r\n        x:15,\r\n        y: 10\r\n    }, {\r\n        x:18,\r\n        y: 4\r\n    }];\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LineGraph\r\n"]},"metadata":{},"sourceType":"module"}