{"ast":null,"code":"var _jsxFileName = \"D:\\\\01_Personal Projects\\\\MyApps\\\\StockSim\\\\robinhood_clone\\\\src\\\\components\\\\StatsRow.js\";\nimport React from 'react';\nimport NegStockSVG from \"../../assets/negStock.svg\";\nimport PosStockSVG from \"../../assets/posStock.svg\";\nimport \"../styles/StatsRow.css\";\nimport { db } from \"./firebase\";\n\nfunction StatsRow(props) {\n  var buyStock = function buyStock() {\n    db.collection('myStocks').where(\"ticker\", \"==\", props.name).get().then(function (querySnapShot) {\n      if (!querySnapShot.empty) {\n        querySnapShot.forEach(function (doc) {\n          db.collection('myStocks').doc(doc.id).update({\n            shares: doc.data().shares += 1\n          });\n        });\n      } else {\n        db.collection('myStocks').add({\n          ticker: props.name,\n          shares: 1\n        });\n      }\n    });\n  };\n\n  var percentChange = (props.price - props.openPrice) / props.openPrice * 100;\n  var icon = percentChange > 0 ? PosStockSVG : NegStockSVG;\n  var trend = percentChange > 0 ? \"positive\" : \"negative\";\n  return React.createElement(\"div\", {\n    className: \"row\",\n    onClick: buyStock,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, React.createElement(\"div\", {\n    className: \"row__intro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, props.name), React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, props.shares && props.shares + \"shares\")), React.createElement(\"div\", {\n    className: \"row__chart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, React.createElement(\"img\", {\n    src: icon,\n    height: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  })), React.createElement(\"div\", {\n    className: \"row__numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, React.createElement(\"p\", {\n    className: \"row__price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 8\n    }\n  }, props.price), React.createElement(\"p\", {\n    className: \"row__percentage {trend}\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 8\n    }\n  }, Number(percentChange).toFixed(2))));\n}\n\nexport default StatsRow;","map":{"version":3,"sources":["D:/01_Personal Projects/MyApps/StockSim/robinhood_clone/src/components/StatsRow.js"],"names":["React","NegStockSVG","PosStockSVG","db","StatsRow","props","buyStock","collection","where","name","get","then","querySnapShot","empty","forEach","doc","id","update","shares","data","add","ticker","percentChange","price","openPrice","icon","trend","Number","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP;AACA,OAAOC,WAAP;AACA;AAEA,SAASC,EAAT;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB,MAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AAEnBH,IAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACCC,KADD,CACO,QADP,EACiB,IADjB,EACuBH,KAAK,CAACI,IAD7B,EAECC,GAFD,GAGCC,IAHD,CAGM,UAACC,aAAD,EAAiB;AACnB,UAAG,CAACA,aAAa,CAACC,KAAlB,EAAwB;AAGpBD,QAAAA,aAAa,CAACE,OAAd,CAAsB,UAASC,GAAT,EAAc;AAEhCZ,UAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACCQ,GADD,CACKA,GAAG,CAACC,EADT,EAECC,MAFD,CAEQ;AACJC,YAAAA,MAAM,EAAEH,GAAG,CAACI,IAAJ,GAAWD,MAAX,IAAqB;AADzB,WAFR;AAKH,SAPD;AAQH,OAXD,MAYK;AAGDf,QAAAA,EAAE,CAACI,UAAH,CAAc,UAAd,EACCa,GADD,CACK;AACDC,UAAAA,MAAM,EAAEhB,KAAK,CAACI,IADb;AAEDS,UAAAA,MAAM,EAAE;AAFP,SADL;AAKH;AACJ,KAzBD;AA0BH,GA5BD;;AA8BA,MAAMI,aAAa,GAAK,CAACjB,KAAK,CAACkB,KAAN,GAAclB,KAAK,CAACmB,SAArB,IAAgCnB,KAAK,CAACmB,SAAxC,GAAmD,GAAzE;AACA,MAAIC,IAAI,GAAIH,aAAa,GAAG,CAAjB,GAAsBpB,WAAtB,GAAoCD,WAA/C;AACA,MAAIyB,KAAK,GAAIJ,aAAa,GAAG,CAAjB,GAAsB,UAAtB,GAAmC,UAA/C;AACA,SACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAqB,IAAA,OAAO,EAAEhB,QAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAK,CAACI,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,KAAK,CAACa,MAAN,IAAiBb,KAAK,CAACa,MAAN,GAAe,QAApC,CAFJ,CADJ,EAKI;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEO,IAAV;AAAgB,IAAA,MAAM,EAAE,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CALJ,EAQF;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BpB,KAAK,CAACkB,KAAjC,CADD,EAEC;AAAG,IAAA,SAAS,EAAC,yBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCI,MAAM,CAACL,aAAD,CAAN,CAAsBM,OAAtB,CAA8B,CAA9B,CAAxC,CAFD,CARE,CADJ;AAeH;;AAED,eAAexB,QAAf","sourcesContent":["import React from 'react'\r\n\r\nimport NegStockSVG from '../../assets/negStock.svg'\r\nimport PosStockSVG from '../../assets/posStock.svg'\r\nimport \"../styles/StatsRow.css\"\r\n\r\nimport { db } from './firebase'\r\n\r\nfunction StatsRow(props) {\r\n\r\n    const buyStock = () => {\r\n        // console.log(\"bought\", props.name);\t// test\r\n        db.collection('myStocks')\r\n        .where(\"ticker\", \"==\", props.name)\r\n        .get()\r\n        .then((querySnapShot)=>{\r\n            if(!querySnapShot.empty){\r\n                //update the record\r\n                // console.log(\"available\");   // test\r\n                querySnapShot.forEach(function(doc) {\r\n                    // console.log(doc.id, \" => \", doc.data());    //test\r\n                    db.collection('myStocks')\r\n                    .doc(doc.id)\r\n                    .update({\r\n                        shares: doc.data().shares += 1\r\n                    })\r\n                })\r\n            }\r\n            else {\r\n                // add a new record\r\n                // console.log(\"Unavailable\");     //test\r\n                db.collection('myStocks')\r\n                .add({\r\n                    ticker: props.name,\r\n                    shares: 1\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    const percentChange = ( (props.price - props.openPrice)/props.openPrice)*100;\r\n    let icon = (percentChange > 0) ? PosStockSVG : NegStockSVG;\r\n    let trend = (percentChange > 0) ? \"positive\" : \"negative\";\r\n    return (\r\n        <div className=\"row\" onClick={buyStock}>\r\n            <div className=\"row__intro\">\r\n                <h1>{props.name}</h1>\r\n                <p>{props.shares && (props.shares + \"shares\")}</p>\r\n            </div>\r\n            <div className=\"row__chart\">\r\n                <img src={icon} height={16} />\r\n            </div>\r\n\t  \t\t\t<div className=\"row__numbers\">\r\n\t  \t\t\t\t<p className=\"row__price\">{props.price}</p>\r\n\t  \t\t\t\t<p className=\"row__percentage {trend}\">{Number(percentChange).toFixed(2)}</p>\r\n\t  \t\t\t</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatsRow\r\n"]},"metadata":{},"sourceType":"module"}